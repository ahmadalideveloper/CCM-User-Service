"""RolePermission Model Upgrade

Revision ID: c76e67a0d4d3
Revises: 20a77bd7a437
Create Date: 2025-06-10 11:12:30.792455

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c76e67a0d4d3'
down_revision: Union[str, None] = '20a77bd7a437'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('role_permissions', sa.Column('is_enabled', sa.Boolean(), nullable=True))
    op.alter_column('role_permissions', 'role_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('role_permissions', 'route_permission_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.create_unique_constraint('_role_route_permission_uc', 'role_permissions', ['role_id', 'route_permission_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('_role_route_permission_uc', 'role_permissions', type_='unique')
    op.alter_column('role_permissions', 'route_permission_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('role_permissions', 'role_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_column('role_permissions', 'is_enabled')
    # ### end Alembic commands ###
